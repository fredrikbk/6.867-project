software implementation fix it later is a bad idea the technique used by arizona state university to implement enterprise resource planning software according to a rigid schedule "try software on workers first fix it later " marketplace sept is poor practice because it diminishes the discipline required for a good implementation plan relies too much on consultants and erodes the institutional knowledge of the systems evidence the poor planning that resulted in service employees waiting in line deep to enter time card data payroll isnt an application where you ask a user to help you discover problems and report them to you to be fixed a well designed software implementation plan anticipates unusual conditions and developers arent caught off guard as you indicate when mistakes inevitably happen if adrian sannier the universitys technology officer is so high on the fix it later approach then he probably will have no problem reporting fuel control software failures to the manufacturer of the new car he just purchased after the engine quits on the interstate or boarding a commercial flight with the knowledge that newly implemented faa traffic control software will fail of the time tom mcdonough north wales pa 
